t1 :-
    nat_(N),
    list_([10, 20, 30], M),
    map_(plus, N, M, R),
    show(R).

[10,21,32]

t2 :-
    nat_(N),
    nat_(M),
    map_(plus, N, M, R),
    show(R).

[0,2,4,6,8,10,12,14,16,18,20,22]

t3 :-
    range_(1, 5, E),
    reduce_(plus, 0, E, R),
    show(R).

[10]

t4 :-
    pos_(N),
    neg_(M),
    sum_(M, N, S),
    show(S).

[-1,1,-2,2,-3,3,-4,4,-5,5,-6,6]

t5 :-
    nat_(N),
    list_([a, b, c], M),
    sum_(N, M, S),
    show(S).

[0,a,1,b,2,c,3,4,5,6,7,8]

t6 :-
    range_(1, 3, N),
    list_([a, b, c, d, e], M),
    sum_(M, N, S),
    show(S).

[a,1,b,2,c,d,e]

t7 :-
    nat_(N),
    slice(4, 8, N, S),
    show(S).

[4,5,6,7]

t8 :-
    neg_(A),
    pos_(B),
    prod_(A, B, P),
    take(30, P, T),
    show(30, T).

[-1-1,-2-1,-1-2,-3-1,-2-2,-1-3,-4-1,-3-2,-2-3,-1-4,-5-1,-4-2,-3-3,-2-4,-1-5,-6-1,-5-2,-4-3,-3-4,-2-5,-1-6,-7-1,-6-2,-5-3,-4-4,-3-5,-2-6,-1-7,-8-1,-7-2]

t9 :-
    nat_(A),
    list_([a, b, c], B),
    prod_(A, B, P),
    take(20, P, T),
    \+ ( X in T,
         \+ writeln(X)
       ).

0-a
1-a
0-b
2-a
1-b
0-c
3-a
2-b
1-c
4-a
3-b
2-c
5-a
4-b
3-c
6-a
5-b
4-c
7-a
6-b

t10 :-
    range_(0, 5, A),
    list_([a, b, c], B),
    prod_(A, B, P),
    take(20, P, T),
    show(30, T).

[0-a,1-a,0-b,2-a,1-b,0-c,3-a,2-b,1-c,4-a,3-b,2-c]

t11 :-
    nat_(A),
    list_([a, b, c], B),
    prod_(B, A, P),
    take(20, P, T),
    show(30, T).

[a-0,b-0,a-1,c-0,b-1,a-2,c-1,b-2,a-3,c-2,b-3,a-4,c-3,b-4,a-5,c-4,b-5,a-6,c-5,b-6]

t12 :-
    const_(10, C),
    nat_(N),
    map_(plus, C, N, R),
    show(R).

[10,11,12,13,14,15,16,17,18,19,20,21]

t13 :-
    const_(10, C),
    nat_(N),
    prod_(C, N, P),
    show(P).

[10-0,10-0,10-1,10-0,10-1,10-2,10-0,10-1,10-2,10-3,10-0,10-1]

t14 :-
    eng_(_X, fail, E),
    list_([a, b], L),
    sum_(E, L, S),
    show(S).

[a,b]

t15 :-
    eng_(X, member(X, [1, 2, 3]), E),
    list_([a, b], L),
    sum_(E, L, S),
    show(S).

[1,a,2,b,3]

t16 :-
    eng_(X, member(X, [1, 2, 3]), E),
    list_([a, b], L),
    prod_(E, L, S),
    show(S).

[1-a,2-a,1-b,3-a,2-b]

t17 :-
    eng_(X, member(X, [1, 2, 3]), S),
    (   X in S,
        writeln(X),
        fail
    ;   is_done(S),
        writeln(S)
    ).

1
2
3
engine_next(done)

1-a
2-a
1-b
3-a
2-b

t19 :-
    range_(1, 5, R),
    cycle_(R, C),
    show(20, C).

[1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4]

t20 :-
    range_(1, 4, R),
    cycle_(R, C),
    list_([a, b, c, d, e, f], L),
    zipper_of(C, L, Z),
    show(Z).

[1-a,2-b,3-c,1-d,2-e,3-f]

t21 :-
    eng_(X, member(X, [a, b, c]), G),
    range_(1, 6, R),
    prod_(G, R, P),
    show(P).

[a-1,b-1,a-2,c-1,b-2,a-3,c-2,b-3,a-4,c-3,b-4,a-5]

t22 :-
    gen_(X, member(X, [a, b, c]), G),
    gen_clone(G, CG),
    prod_(G, CG, P),
    show(P).

[a-a,b-a,a-b,c-a,b-b,a-c,c-b,b-c]

t23 :-
    gen_(X, member(X, [a, b, c]), G),
    cycle_(G, C),
    show(C).

[a,b,c,a,b,c,a,b,c,a,b,c]

t24 :-
    range_(0, 10, A),
    range_(100, 110, B),
    arith_sum(A, B, S),
    show(S).

[100,102,104,106,108,110,112,114,116,118]

t25 :-
    fact(5, S),
    show(S).

[120]

t26 :-
    nat_(N),
    chains_([succ, succ], N, N2),
    show(N2).

[2,3,4,5,6,7,8,9,10,11,12,13]

t27 :-
    fibo_(E),
    show(E).

[1,1,2,3,5,8,13,21,34,55,89,144]

t28 :-
    odds(Xs),
    list_(Xs, L),
    nat_(N),
    prod_(L, N, P),
    show(P).

[1-0,3-0,1-1,5-0,3-1,1-2,7-0,5-1,3-2,1-3,9-0,7-1]

<engine>(4,0x7f93c58451c0)
<engine>(5,0x7f93c3e3ca70)

bm1(K) :-
    nl,
    listing(bm1),
    N is 2^K,
    writeln(with_lazy_lists:N),
    lazy_findall(I, between(0, N, I), Is),
    '__aux_maplist/3_succ+0'(Is, Js),
    last(Js, X),
    writeln([X]).

with_lazy_lists:2097152
[2097153]

bm2(K) :-
    nl,
    listing(bm2),
    N is 2^K,
    N1 is N+1,
    writeln(with_engine_based_generators:N),
    eng_(I, between(0, N, I), R),
    map_(succ, R, SR),
    slice(N, N1, SR, S),
    show(S).

with_engine_based_generators:2097152
[2097153]

bm3(K) :-
    nl,
    listing(bm3),
    N is 2^K,
    N1 is N+1,
    writeln(with_simple_generators:N),
    range_(0, N1, R),
    map_(succ, R, SR),
    slice(N, N1, SR, S),
    show(S).

with_simple_generators:2097152
[2097153]

times=[8.388182878494263,5.573073863983154,1.9322969913482666]
